/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.7
 * Generated at: 2021-04-23 13:41:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.wlkq.pe.util.Const;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1618882121395L));
    _jspx_dependants.put("jar:file:/E:/PEC/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/pe-main/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425949870000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.wlkq.pe.util.Const");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ch-en\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${PATH }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/css/style.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${PATH }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/layui/css/layui.css\">\r\n");
      out.write("\r\n");
      out.write("    <!-- <link rel=\"stylesheet\" href=\"layui/css/layui.mobile.css\"> -->\r\n");
      out.write("    <title>登录谊动</title>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body style=\"background-image: url(");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${PATH}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/img/bg.jpg);background-size: cover;background-repeat: no-repeat;\" cz-shortcut-listen=\"true\" class=\"layui-layout-body\">\r\n");
      out.write("    <div class=\"space\"></div>\r\n");
      out.write("    \r\n");
      out.write("    <div id=\"login-box\">\r\n");
      out.write("        <div class=\"login-box\">\r\n");
      out.write("            <h1 style=\"font-weight: bold;\">欢迎使用谊动</h1>\r\n");
      out.write("            <img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${PATH}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/img/logo.png\" alt=\"\" style=\"width: 70px;height: 70px;\">\r\n");
      out.write("            \r\n");
      out.write("            <form action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${PATH }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/dologin\" method=\"post\" class=\" form-signin\">\r\n");
      out.write("                <div class=\"loginbar\">\r\n");
      out.write("                    <i class=\"layui-icon layui-icon-username\" style=\"font-size: 30px; color: #FFF;\"></i>\r\n");
      out.write("                    <input type=\"text\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.loginacct }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"name=\"loginacct\" id=\"username\" class=\"loginacct\"placeholder=\"请输入账号\">\r\n");
      out.write("                </div>\r\n");
      out.write("                \r\n");
      out.write("                <div class=\"loginbar\">\r\n");
      out.write("                    <i class=\"layui-icon layui-icon-password\" style=\"font-size: 30px; color: #FFF;\"></i>\r\n");
      out.write("                    <input type=\"password\" name=\"userpswd\" id=\"password\" placeholder=\"请输入密码\">\r\n");
      out.write("                </div>\r\n");
      out.write("\t\t        <div class=\"code\">\r\n");
      out.write("\t\t\t        <input type=\"text\" value=\"\" placeholder=\"请输入验证码\" class=\"input-val\">\r\n");
      out.write("\t\t\t        <canvas id=\"canvas\" width=\"120\" height=\"43\"></canvas>\r\n");
      out.write("\t\t        </div>\r\n");
      out.write("                <div class=\"login-btn\">\r\n");
      out.write("                    <a class=\"bt\" href=\"#\">登  录</a>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"resigter\">\r\n");
      out.write("                    <a href=\"regist\" style=\"float: left;\">立即注册</a>\r\n");
      out.write("                    <a href=\"#\" style=\"float: right;\">忘记密码?</a>\r\n");
      out.write("                </div>\r\n");
      out.write("            </form>\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${PATH }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/jquery/jquery-2.1.1.min.js\"></script>\r\n");
      out.write("   <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${PATH }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/static/jquery/layer/layer.js\"></script>\r\n");
      out.write("    <script type=\"text/javascript\">\r\n");
      out.write("    \tvar show_num = [];\r\n");
      out.write("        draw(show_num);\r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write(" \t\t\r\n");
      out.write(" \t\t$(\".loginacct\").blur(function(){\r\n");
      out.write("     \tvar loginacct = $(\".loginacct\").val();\r\n");
      out.write(" \t   \t\tif(loginacct==\"\"){\r\n");
      out.write("\t    \t\tlayer.tips(\"<span style='color:black'>\"+'账号不能为空哦'+\"</span>\",\".loginacct\",{ tips: [2, '#FFFFFF'],\r\n");
      out.write("\t    \t        time: 3000\r\n");
      out.write("    \t        });\r\n");
      out.write("\t    \t\t\treturn false;\r\n");
      out.write("    \t\t}\r\n");
      out.write(" \t\t\t\r\n");
      out.write(" \t\t})\r\n");
      out.write(" \t\t\r\n");
      out.write(" \t\t$(\"#password\").blur(function(){\r\n");
      out.write(" \t\t\tvar userpswd = $(\"#password\").val();\r\n");
      out.write("\t \t   if(userpswd==\"\"){\r\n");
      out.write("\t \t\t   \r\n");
      out.write("\t    \t\tlayer.tips(\"<span style='color:black'>\"+'密码不能为空哦'+\"</span>\",\"#password\",{ tips: [2,  '#FFFFFF'],\r\n");
      out.write("\t    \t        time: 3000\r\n");
      out.write("\t    \t        });\r\n");
      out.write("\t    \t\t\treturn false;\r\n");
      out.write("\t    \t\t}\r\n");
      out.write(" \t\t\t\r\n");
      out.write(" \t\t})\r\n");
      out.write(" \t\t//添加键盘事件\r\n");
      out.write(" \t\t\r\n");
      out.write(" \t\t$(window).keydown(function(e){\r\n");
      out.write("\t\t    var curKey = e.which; \r\n");
      out.write("\t\t    if(curKey == 13){\r\n");
      out.write("\t\t       login(); \r\n");
      out.write("\t\t    }\r\n");
      out.write("\t\t})\r\n");
      out.write(" \r\n");
      out.write("        $(\"#canvas\").on('click',function(){\r\n");
      out.write("            draw(show_num);\r\n");
      out.write("        })\r\n");
      out.write("        \r\n");
      out.write("        $(\".bt\").on('click',function(){\r\n");
      out.write("        \tlogin();\r\n");
      out.write("        })\r\n");
      out.write("        \r\n");
      out.write("        function login(){\r\n");
      out.write(" \t\t\t\r\n");
      out.write(" \t\t\t var val = $(\".input-val\").val().toLowerCase();\r\n");
      out.write("             var num = show_num.join(\"\");\r\n");
      out.write("             if(val==''){\r\n");
      out.write("             \tlayer.alert('请输入验证码！',{icon:99});\r\n");
      out.write("             \treturn false;\r\n");
      out.write("             \t\r\n");
      out.write("             }else if(val == num){\r\n");
      out.write("             \t\r\n");
      out.write("             \tvar loginacct = $(\".loginacct\").val();\r\n");
      out.write("          \t\tvar userpswd = $(\"#password\").val();\r\n");
      out.write("          \t\t\r\n");
      out.write("          \t\t\r\n");
      out.write("          \t\tif(userpswd==''){\r\n");
      out.write(" \t            \tlayer.alert('密码不能为空！',{icon:99});\r\n");
      out.write(" \t            \treturn false;\r\n");
      out.write(" \t            \t\r\n");
      out.write(" \t            }\r\n");
      out.write("          \t\t\r\n");
      out.write("          \t\t\r\n");
      out.write("          \t\t\r\n");
      out.write("          \t   if($.trim(loginacct)==\"\"){\r\n");
      out.write("             \t\tlayer.alert('账号不能为空',{icon:100});\r\n");
      out.write("             \t\t\treturn false;\r\n");
      out.write("             \t\t}else{\r\n");
      out.write("             \t\t\t $.post(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${PATH }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/dologin\",{loginacct:loginacct,userpswd:userpswd},function(result){\r\n");
      out.write("             \t\t\t\t \r\n");
      out.write("                          \t   if($.trim(result)!='true'){\r\n");
      out.write("                          \t\t   layer.alert(result,{icon:5});\r\n");
      out.write("                          \t\t   \t\treturn false;\r\n");
      out.write("                          \t\t \r\n");
      out.write("                          \t   }else{\r\n");
      out.write("                          \t\t layer.msg(\"恭喜你，登录成功\",{time:1500,icon:6},function(){\r\n");
      out.write("                          \t\t   \t\tlocation.href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${PATH}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/toMain\";\r\n");
      out.write("                            \t\t   });\r\n");
      out.write("                          \t   }\r\n");
      out.write("                             });\r\n");
      out.write("             \t\t}\r\n");
      out.write("          \t\t\t\r\n");
      out.write("          \t\t\r\n");
      out.write("          \t   \r\n");
      out.write("          \t  \r\n");
      out.write("             \r\n");
      out.write("             }else{\r\n");
      out.write("                layer.alert('验证码错误！请重新输入！',{icon:5});\r\n");
      out.write("           \r\n");
      out.write("                 $(\".input-val\").val('');\r\n");
      out.write("                 draw(show_num);\r\n");
      out.write("                 return false;  \r\n");
      out.write("                \r\n");
      out.write("             }\r\n");
      out.write(" \t\t}\r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("    \tfunction draw(show_num) {\r\n");
      out.write("    \t    var canvas_width=$('#canvas').width();\r\n");
      out.write("    \t    var canvas_height=$('#canvas').height();\r\n");
      out.write("    \t    var canvas = document.getElementById(\"canvas\");//获取到canvas的对象，演员\r\n");
      out.write("    \t    var context = canvas.getContext(\"2d\");//获取到canvas画图的环境，演员表演的舞台\r\n");
      out.write("    \t    canvas.width = canvas_width;\r\n");
      out.write("    \t    canvas.height = canvas_height;\r\n");
      out.write("    \t    var sCode = \"A,B,C,E,F,G,H,J,K,L,M,N,P,Q,R,S,T,W,X,Y,Z,1,2,3,4,5,6,7,8,9,0\";\r\n");
      out.write("    \t    var aCode = sCode.split(\",\");\r\n");
      out.write("    \t    var aLength = aCode.length;//获取到数组的长度\r\n");
      out.write("    \t    \r\n");
      out.write("    \t    for (var i = 0; i <= 3; i++) {\r\n");
      out.write("    \t        var j = Math.floor(Math.random() * aLength);//获取到随机的索引值\r\n");
      out.write("    \t        var deg = Math.random() * 30 * Math.PI / 180;//产生0~30之间的随机弧度\r\n");
      out.write("    \t        var txt = aCode[j];//得到随机的一个内容\r\n");
      out.write("    \t        show_num[i] = txt.toLowerCase();\r\n");
      out.write("    \t        var x = 10 + i * 20;//文字在canvas上的x坐标\r\n");
      out.write("    \t        var y = 20 + Math.random() * 8;//文字在canvas上的y坐标\r\n");
      out.write("    \t        context.font = \"bold 23px 微软雅黑\";\r\n");
      out.write("\r\n");
      out.write("    \t        context.translate(x, y);\r\n");
      out.write("    \t        context.rotate(deg);\r\n");
      out.write("\r\n");
      out.write("    \t        context.fillStyle = randomColor();\r\n");
      out.write("    \t        context.fillText(txt, 0, 0);\r\n");
      out.write("\r\n");
      out.write("    \t        context.rotate(-deg);\r\n");
      out.write("    \t        context.translate(-x, -y);\r\n");
      out.write("    \t    }\r\n");
      out.write("    \t    for (var i = 0; i <= 5; i++) { //验证码上显示线条\r\n");
      out.write("    \t        context.strokeStyle = randomColor();\r\n");
      out.write("    \t        context.beginPath();\r\n");
      out.write("    \t        context.moveTo(Math.random() * canvas_width, Math.random() * canvas_height);\r\n");
      out.write("    \t        context.lineTo(Math.random() * canvas_width, Math.random() * canvas_height);\r\n");
      out.write("    \t        context.stroke();\r\n");
      out.write("    \t    }\r\n");
      out.write("    \t    for (var i = 0; i <= 30; i++) { //验证码上显示小点\r\n");
      out.write("    \t        context.strokeStyle = randomColor();\r\n");
      out.write("    \t        context.beginPath();\r\n");
      out.write("    \t        var x = Math.random() * canvas_width;\r\n");
      out.write("    \t        var y = Math.random() * canvas_height;\r\n");
      out.write("    \t        context.moveTo(x, y);\r\n");
      out.write("    \t        context.lineTo(x + 1, y + 1);\r\n");
      out.write("    \t        context.stroke();\r\n");
      out.write("    \t    }\r\n");
      out.write("    \t}\r\n");
      out.write("\r\n");
      out.write("    \tfunction randomColor() {//得到随机的颜色值\r\n");
      out.write("    \t    var r = Math.floor(Math.random() * 256);\r\n");
      out.write("    \t    var g = Math.floor(Math.random() * 256);\r\n");
      out.write("    \t    var b = Math.floor(Math.random() * 256);\r\n");
      out.write("    \t    return \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\r\n");
      out.write("    \t}\r\n");
      out.write(" \r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
